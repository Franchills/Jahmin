{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "Album.svelte",
    "PlayButton.svelte",
    "PlayerProgress.svelte",
    "PlayerVolumeBar.svelte",
    "SongListItem.svelte",
    "ArtGrid.svelte",
    "BackgroundArt.svelte",
    "Details.svelte",
    "Grouping.svelte",
    "Navigation.svelte",
    "Player.svelte",
    "SongList.svelte",
    "SongListBackground.svelte"
  ],
  "sourcesContent": [
    "<script lang=\"ts\">import Navigation from './includes/Navigation.svelte';\nimport ArtGrid from './includes/ArtGrid.svelte';\nimport Grouping from './includes/Grouping.svelte';\nimport Player from './includes/Player.svelte';\nimport SongList from './includes/SongList.svelte';\nimport Details from './includes/Details.svelte';\nimport Controller from './controllers/MainController.svelte';\nimport BackgroundArt from './includes/BackgroundArt.svelte';\nimport SongListBackground from './includes/SongListBackground.svelte';\nimport { appTitle, selectedSongs } from './store/index.store';\nimport { onMount } from 'svelte';\nimport { getChangesProgressIPC, syncDbVersionIPC } from './service/ipc.service';\nonMount(() => {\n    syncDbVersionIPC();\n    // getNewDbChangesProgress()\n    window.onkeydown = function (e) {\n        return !(e.code == 'Space' && e.target == document.body);\n    };\n    // window.onclick = (evt: MouseEvent) => {\n    // \tlet songListSvelteFound = false\n    // \tevt['path'].forEach((element: HTMLElement) => {\n    // \t\tif (element.tagName === 'SONG-LIST-SVLT') {\n    // \t\t\tsongListSvelteFound = true\n    // \t\t}\n    // \t})\n    // \tif (songListSvelteFound === false) {\n    // \t\t$selectedSongs = []\n    // \t\tsongListSvelteFound = false\n    // \t}\n    // }\n});\nfunction getNewDbChangesProgress() {\n    getChangesProgressIPC().then((result) => {\n        console.log((100 / result['total']) * result['current'], '% Total:', result['total'], ' Current:', result['current']);\n        setTimeout(() => {\n            getNewDbChangesProgress();\n        }, 10000);\n    });\n}\n</script>\n\n<svelte:head>\n\t<title>{$appTitle}</title>\n</svelte:head>\n\n<Controller />\n\n<main>\n\t<Navigation />\n\t<ArtGrid />\n\t<Grouping />\n\t<Player />\n\t<SongList />\n\t<Details />\n\t<BackgroundArt />\n\t<SongListBackground />\n</main>\n\n<style>\n\tmain {\n\t\theight: 100%;\n\t\toverflow-y: hidden;\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 64px auto 8fr 256px;\n\t\tgrid-template-rows: 2fr 1fr 64px;\n\t\tgrid-template-areas:\n\t\t\t'navigation-svlt grouping-svlt art-grid-svlt details-svlt'\n\t\t\t'navigation-svlt grouping-svlt song-list-svlt details-svlt'\n\t\t\t'navigation-svlt grouping-svlt player-svlt details-svlt';\n\t}\n</style>\n",
    "<script lang=\"ts\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { onMount } from 'svelte';\nimport { getCoverIPC } from '../service/ipc.service';\nimport { setNewPlayback } from '../functions/setNewPlayback.fn';\nimport { playback, playbackIndex, selectedAlbum } from '../store/player.store';\n;\nimport { scrollSongListToTop } from '../functions/scrollSongListToTop.fn';\nimport { selectedSongs } from '../store/index.store';\nexport let album;\nexport let index;\nlet coverType = undefined;\nlet coverSrc = undefined; /* Image Source URL */\nonMount(() => {\n    addIntersectionObserver();\n    let lastPlayedAlbumID = localStorage.getItem('LastPlayedAlbumID');\n    if (album['ID'] === lastPlayedAlbumID) {\n        if ($playback === undefined) {\n            $playback = {\n                AlbumID: lastPlayedAlbumID,\n                SongList: []\n            };\n            selectLastPlayedSong();\n        }\n    }\n});\nfunction selectLastPlayedSong() {\n    album['Songs'] = album['Songs'].sort((a, b) => a['Track'] - b['Track']);\n    $selectedAlbum = album;\n    let lastPlayedSong = album['Songs'].find((i) => i['ID'] === Number(localStorage.getItem('LastPlayedSongID')));\n    if (lastPlayedSong) {\n        let lastPlayedSongID = lastPlayedSong['ID'];\n        if (lastPlayedSongID) {\n            setTimeout(() => {\n                let $song = document.querySelector(`#${CSS.escape(String(lastPlayedSongID))}`);\n                if ($song) {\n                    $song.scrollIntoView({ block: 'center' });\n                }\n                setNewPlayback(album['ID'], album['Songs'].findIndex((i) => i['ID'] === lastPlayedSongID), false);\n            }, 100);\n        }\n    }\n}\nfunction fetchAlbumCover() {\n    getCoverIPC(album['RootDir']).then((result) => {\n        if (result !== null) {\n            coverSrc = result['filePath'];\n            coverType = result['fileType'];\n        }\n        else {\n            coverType = 'not found';\n        }\n    });\n}\nfunction addIntersectionObserver() {\n    new IntersectionObserver((entries) => {\n        if (entries[0].isIntersecting === true && coverSrc === undefined) {\n            fetchAlbumCover();\n        }\n    }, { root: document.querySelector(`art-grid-svlt`), threshold: 0, rootMargin: '0px 0px 50% 0px' }).observe(document.querySelector(`art-grid-svlt > #${CSS.escape(album['ID'])}`));\n}\n// On Album Click/Double Click\nfunction prepareAlbum(evt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        scrollSongListToTop();\n        // Song Sorting\n        album['Songs'] = album['Songs'].sort((a, b) => a['Track'] - b['Track']);\n        $selectedAlbum = album;\n        if (evt['type'] === 'dblclick') {\n            setNewPlayback(album['ID'], 0, true);\n        }\n    });\n}\n</script>\n\n<album\n\tclass={$selectedAlbum?.['ID'] === album?.['ID'] ? 'selected' : ''}\n\tid={album['ID']}\n\ton:dblclick={(evt) => prepareAlbum(evt)}\n\ton:click={(evt) => prepareAlbum(evt)}\n>\n\t<!-- ▼▼▼ Cover Handle ▼▼▼ -->\n\t{#if coverType === undefined}\n\t\t<img src=\"./img/audio.svg\" class=\"loader\" alt=\"\" />\n\t{/if}\n\t{#if coverType === 'not found'}<img src=\"./img/compact-disc.svg\" class=\"notFound\" alt=\"\" />{/if}\n\t{#if coverType === 'image'}<img src={coverSrc} alt={album['Name']} />{/if}\n\t{#if coverType === 'video'}\n\t\t<video autoplay loop>\n\t\t\t<track kind=\"captions\" />\n\t\t\t<source src={coverSrc} />\n\t\t</video>\n\t{/if}\n\t<!-- ▲▲▲ Cover Handle ▲▲▲ -->\n\n\t<img src=\"./img/gradient-overlay.svg\" alt=\"\" />\n\n\t<album-details>\n\t\t<album-name>{album['Name']}</album-name>\n\n\t\t{#if album['AlbumArtist'] !== undefined}\n\t\t\t<album-artist>{album['AlbumArtist']}</album-artist>\n\t\t{:else if album['DynamicAlbumArtist'] !== undefined}\n\t\t\t<album-artist>{album['DynamicAlbumArtist']}</album-artist>\n\t\t{:else}\n\t\t\t<album-artist></album-artist>\n\t\t{/if}\n\t</album-details>\n</album>\n\n<style>\n\talbum:last-of-type {\n\t\t/* padding-bottom: 20px; */\n\t}\n\n\talbum.selected {\n\t\tbox-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.5), 0 0 0 7.5px rgba(255, 255, 255, 0.5);\n\t}\n\n\talbum {\n\t\tposition: relative;\n\t\tdisplay: grid;\n\n\t\tmargin: 1rem;\n\t\t/* justify-content: center;\n\t\talign-items: center;\n\t\tflex-direction: column; */\n\t\tcursor: pointer;\n\t\theight: var(--cover-dimension);\n\t\twidth: var(--cover-dimension);\n\t\tmax-width: var(--cover-dimension);\n\t\tmax-height: var(--cover-dimension);\n\t}\n\n\talbum-details {\n\t\tpadding: 0.5rem 1rem;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-self: end;\n\t\ttext-align: center;\n\t}\n\n\talbum > * {\n\t\tgrid-column: 1;\n\t\tgrid-row: 1;\n\t}\n\n\talbum-artist {\n\t\ttext-overflow: ellipsis;\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t\tmax-width: calc(var(--cover-dimension) - 1.5rem);\n\t}\n\n\talbum-name {\n\t\tfont-variation-settings: 'wght' 600;\n\t\twhite-space: normal;\n\t}\n\n\tvideo {\n\t\theight: var(--cover-dimension);\n\t\twidth: var(--cover-dimension);\n\t}\n\n\timg {\n\t\theight: var(--cover-dimension);\n\t\twidth: var(--cover-dimension);\n\t}\n\n\timg.loader {\n\t\tpadding: 5rem;\n\t\t/* height: 32px;\n\t\twidth: 32px; */\n\t}\n\n\timg.notFound {\n\t\tborder-width: 10px;\n\t\tborder-color: #fff #ccc #ccc #fff;\n\t\tborder-style: solid;\n\t\tpadding: 2rem;\n\t}\n</style>\n",
    "<script lang=\"ts\">import { isPlaying } from '../store/player.store';\nexport let player;\nfunction togglePlay() {\n    if ($isPlaying) {\n        player.pause();\n    }\n    else {\n        if (player.src !== '') {\n            player.play();\n        }\n    }\n}\n</script>\n\n<play-pause-button class={$isPlaying ? '' : 'playing'} on:click={() => togglePlay()}>\n\t<left-part />\n\n\t<right-part />\n</play-pause-button>\n\n<style>\n\tplay-pause-button {\n\t\tposition: relative;\n\t\tdisplay: block;\n\t\theight: var(--button-size);\n\t\twidth: var(--button-size);\n\t\tbackground-color: transparent;\n\t}\n\n\tplay-pause-button > * {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tdisplay: block;\n\t\tbackground-color: var(--low-color);\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\ttransition: background-color 300ms ease-in-out, clip-path 500ms cubic-bezier(0.075, 0.82, 0.165, 1);\n\t}\n\n\tplay-pause-button.playing left-part {\n\t\tclip-path: polygon(0 0, 50.5% 25.25%, 50.5% 74.75%, 0% 100%);\n\t}\n\n\tplay-pause-button.playing right-part {\n\t\tclip-path: polygon(49.5% 24.75%, 100% 50%, 100% 50%, 49.5% 75.25%);\n\t}\n\n\tleft-part {\n\t\tclip-path: polygon(0 0, 33% 0, 33% 100%, 0% 100%);\n\t}\n\n\tright-part {\n\t\tclip-path: polygon(66% 0, 100% 0, 100% 100%, 66% 100%);\n\t}\n</style>\n",
    "<script lang=\"ts\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { onMount } from 'svelte';\nimport { getWaveformIPC } from '../service/ipc.service';\nimport { playback, playbackIndex } from '../store/player.store';\n;\nexport let player;\nexport let song;\nlet pauseDebounce = undefined;\nlet isMouseDown = false;\nlet isMouseIn = false;\nlet progressBackgroundEl = undefined;\n$: {\n    $playbackIndex;\n    fetchWave();\n}\nfunction fetchWave() {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (($playback === null || $playback === void 0 ? void 0 : $playback.SongList.length) > 0) {\n            // Keeps track of the song the getWaveformIPC fn was called for\n            let tempSong = $playback['SongList'][$playbackIndex['indexToPlay']];\n            progressBackgroundEl.style.opacity = '0';\n            getWaveformIPC(tempSong['SourceFile']).then((waveformUrl) => {\n                setTimeout(() => {\n                    // Gets the actual song playing\n                    let currentSongPlaying = $playback['SongList'][$playbackIndex['indexToPlay']];\n                    /*\n                    If the temporary song and the actual playing song match, it shows the waveform\n                    Prevents the multiple waveform show back to back and makes sure the proper waveform is for the proper song.\n                    */\n                    if (tempSong['$loki'] === currentSongPlaying['$loki']) {\n                        progressBackgroundEl.src = waveformUrl;\n                        progressBackgroundEl.style.opacity = '1';\n                    }\n                }, 250);\n            });\n        }\n    });\n}\nonMount(() => {\n    hookPlayerProgressEvents();\n    progressBackgroundEl = document.querySelector('img#progress-background');\n});\nfunction hookPlayerProgressEvents() {\n    let playerProgress = document.querySelector('player-progress');\n    let playerForeground = document.querySelector('player-progress progress-foreground');\n    playerProgress.addEventListener('mouseenter', () => (isMouseIn = true));\n    playerProgress.addEventListener('mouseleave', () => (isMouseIn = false));\n    playerProgress.addEventListener('mousedown', () => (isMouseDown = true));\n    playerProgress.addEventListener('mouseup', () => (isMouseDown = false));\n    playerProgress.addEventListener('mousemove', (evt) => {\n        if (isMouseDown && isMouseIn)\n            applyProgressChange(evt);\n    });\n    playerProgress.addEventListener('click', (evt) => applyProgressChange(evt));\n    function applyProgressChange(evt) {\n        player.pause();\n        playerForeground.classList.add('not-smooth');\n        let playerWidth = playerProgress['scrollWidth'];\n        let selectedPercent = Math.ceil((100 / playerWidth) * evt['offsetX']);\n        document.documentElement.style.setProperty('--song-time', `${selectedPercent}%`);\n        clearTimeout(pauseDebounce);\n        pauseDebounce = setTimeout(() => {\n            player.currentTime = song['Duration'] / (100 / selectedPercent);\n            playerForeground.classList.remove('not-smooth');\n            player.play();\n        }, 500);\n    }\n}\n</script>\n\n<player-progress>\n\t<progress-foreground />\n\t<img id=\"progress-background\" src=\"\" alt=\"\" />\n</player-progress>\n\n<style>\n\tplayer-progress {\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\theight: 64px;\n\t}\n\n\tplayer-progress > * {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tdisplay: block;\n\t\theight: 64px;\n\t}\n\n\tplayer-progress progress-foreground {\n\t\tz-index: 1;\n\t\tmix-blend-mode: soft-light;\n\t\tbackground-color: rgba(0, 0, 0, 0.5);\n\t\t/* mix-blend-mode: hard-light;\n\t\tbackground-color: var(--high-color); */\n\t\tmin-width: var(--song-time);\n\t\ttransition: min-width 100ms linear;\n\t}\n\n\tplayer-progress #progress-background {\n\t\tz-index: 0;\n\t\twidth: 100%;\n\t\topacity: 0;\n\t\t/* opacity: 1; */\n\t\ttransition: opacity 250ms linear;\n\t}\n</style>\n",
    "<script lang=\"ts\">import { onMount } from 'svelte';\nlet volume = 0;\nexport let player;\nlet isShiftKeyDown = false;\nlet isPlayerLoaded = false;\nlet saveVolumeDebounce = undefined;\n$: {\n    if (player && isPlayerLoaded === false) {\n        isPlayerLoaded = true;\n        loadLocalStorageVolume();\n    }\n}\n$: {\n    volume;\n    if (isPlayerLoaded === true) {\n        volumeChange();\n    }\n}\nonMount(() => { });\nfunction volumeChange() {\n    player.volume = volume / 100;\n    let volumeBarWidth = document.querySelector('volume-bar').clientWidth;\n    let volumeThumbWidth = document.querySelector('volume-bar volume-thumb').clientWidth;\n    document.documentElement.style.setProperty('--volume-level', `${(volumeBarWidth - volumeThumbWidth) * (volume / 100)}px`);\n    clearTimeout(saveVolumeDebounce);\n    saveVolumeDebounce = setTimeout(() => {\n        localStorage.setItem('volume', String(volume));\n    }, 1000);\n}\nfunction loadLocalStorageVolume() {\n    volume = Number(localStorage.getItem('volume') || NaN);\n    if (volume === undefined || isNaN(volume) || volume > 100) {\n        volume = 25;\n        localStorage.setItem('volume', String(volume));\n    }\n    player.volume = volume / 100;\n    volumeChange();\n}\n</script>\n\n<volume-bar>\n\t<input\n\t\ton:keydown={(evt) => {\n\t\t\tif (evt['key'] === 'Shift') isShiftKeyDown = true\n\t\t}}\n\t\ton:keyup={() => (isShiftKeyDown = false)}\n\t\ttype=\"range\"\n\t\tmin=\"0\"\n\t\tmax=\"100\"\n\t\tstep={isShiftKeyDown ? '5' : '1'}\n\t\tbind:value={volume}\n\t/>\n\t<background />\n\t<volume-thumb>{Math.round(volume)}</volume-thumb>\n</volume-bar>\n\n<style>\n\tvolume-bar {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 100%;\n\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\theight: 32px;\n\t}\n\n\tinput {\n\t\tdisplay: block;\n\t\tgrid-row: 1;\n\t\tgrid-column: 1;\n\t\theight: 100%;\n\t\tz-index: 1;\n\t\topacity: 0;\n\t}\n\n\tinput:active {\n\t\tcursor: none;\n\t}\n\n\tvolume-thumb {\n\t\tgrid-row: 1;\n\t\tgrid-column: 1;\n\t\ttransform: translateX(var(--volume-level)); /*  Volume Visual Control */\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\n\t\theight: 32px;\n\t\twidth: 32px;\n\t\tbackground-color: #fff;\n\t\tborder-radius: 25px;\n\t\tmix-blend-mode: hard-light;\n\n\t\tbox-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.2);\n\t\tcolor: #767676;\n\n\t\tfont-variation-settings: 'wght' 700;\n\t}\n\n\tbackground {\n\t\tgrid-row: 1;\n\t\tgrid-column: 1;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\theight: 16px;\n\t\tbackground: linear-gradient(to right, var(--high-color), var(--low-color));\n\t\tborder-radius: 25px;\n\t\tbox-shadow: inset 0 0 0 2px #fff, inset 0 0 5px 0 rgba(0, 0, 0, 0.2), 0 0 10px 0 rgba(0, 0, 0, 0.2);\n\t}\n</style>\n",
    "<script lang=\"ts\">import { onMount } from 'svelte';\n;\nimport { playback, playbackIndex, selectedAlbum } from '../store/player.store';\nimport { setNewPlayback } from '../functions/setNewPlayback.fn';\nimport { selectedSongs } from '../store/index.store';\nexport let song;\nexport let index;\nexport let albumID;\nfunction parseDuration(duration) {\n    if (duration >= 60 * 60) {\n        return new Date(duration * 1000).toISOString().substr(11, 8);\n    }\n    else {\n        return new Date(duration * 1000).toISOString().substr(14, 5);\n    }\n}\nfunction songListItemDbLClickEventHandler() {\n    setNewPlayback(albumID, index, true);\n}\n</script>\n\n<song-list-item\n\tid={song['ID']}\n\t{index}\n\ton:dblclick={() => songListItemDbLClickEventHandler()}\n\tclass=\"\n\t{$playbackIndex['indexToPlay'] === index && $selectedAlbum['ID'] === $playback?.['AlbumID']\n\t\t? 'playing'\n\t\t: ''}\n\t{$selectedSongs.includes(song['ID']) ? 'selected' : ''}\"\n>\n\t<song-number>{index}</song-number>\n\t<!-- <song-number>{song['Track']}</song-number> -->\n\t<song-number>{song['ID']}</song-number>\n\t<song-title>{song['Title']}</song-title>\n\t<song-duration>{parseDuration(song['Duration'])}</song-duration>\n</song-list-item>\n\n<style>\n\tsong-list-item {\n\t\tposition: relative;\n\t\tcursor: pointer;\n\n\t\tdisplay: grid;\n\t\tgrid-template-columns: max-content max-content auto max-content;\n\t\tgrid-template-rows: auto;\n\n\t\tmargin: 0.25rem 0;\n\t\tpadding: 0.25rem 0.5rem;\n\t\tuser-select: none;\n\n\t\tborder-radius: 5px;\n\n\t\ttransition-property: font-variation-settings, box-shadow, background-color;\n\t\ttransition-duration: 250ms;\n\t\ttransition-timing-function: ease-in-out;\n\t}\n\n\tsong-list-item > * {\n\t\tpadding: 0 0.5rem;\n\t}\n\n\tsong-list-item.playing {\n\t\tfont-variation-settings: 'wght' 600;\n\t\tbox-shadow: inset 0 0px 0 1px rgba(255, 255, 255, 0.5);\n\t\tbackground-color: rgba(255, 255, 255, 0.1);\n\t}\n\tsong-list-item.selected {\n\t\tbackground-color: rgba(255, 255, 255, 0.15);\n\t}\n</style>\n",
    "<script lang=\"ts\">var _a;\nimport { onMount } from 'svelte';\nimport Album from '../components/Album.svelte';\nimport { getAlbumsIPC, getAllAlbumsIPC } from '../service/ipc.service';\nimport { albums, isValuesToFilterChanged, storeConfig } from '../store/index.store';\n$: if ($storeConfig !== undefined) {\n    let dimension;\n    try {\n        dimension = $storeConfig['art']['dimension'];\n    }\n    catch (error) {\n        dimension = 128;\n    }\n    finally {\n        document.documentElement.style.setProperty('--cover-dimension', `${dimension}px`);\n    }\n}\n$: {\n    let groupOnlyByFolder = (_a = $storeConfig === null || $storeConfig === void 0 ? void 0 : $storeConfig.userOptions) === null || _a === void 0 ? void 0 : _a.groupOnlyByFolder;\n    if (groupOnlyByFolder !== undefined) {\n        fetchSongs(groupOnlyByFolder);\n    }\n}\n// IMPORTANT: Create symlinks between config types and create somehow a script to create them.\nonMount(() => {\n    // Whenever a filter is selected resets the scroll to top. Can't do it in reactive statement because querySelector gives undefined.\n    isValuesToFilterChanged.subscribe(() => {\n        document.querySelector('art-grid-svlt').scrollTop = 0;\n    });\n});\nfunction fetchSongs(groupOnlyByFolder) {\n    console.log(groupOnlyByFolder);\n    if (!groupOnlyByFolder) {\n        // Calls the IPC once to wait for the filtering to be done.\n        getAlbumsIPC().then(() => {\n            scrollToLastAlbumPlayed();\n        });\n    }\n    else {\n        getAllAlbumsIPC();\n    }\n}\nfunction scrollToLastAlbumPlayed() {\n    let lastPlayedAlbumID = localStorage.getItem('LastPlayedAlbumID') || undefined;\n    if (lastPlayedAlbumID) {\n        let $album = document.querySelector(`#${CSS.escape(lastPlayedAlbumID)}`);\n        if ($album) {\n            $album.scrollIntoView({ block: 'center' });\n        }\n    }\n}\n</script>\n\n<art-grid-svlt>\n\t{#each $albums as album, index (album['ID'])}\n\t\t<Album {album} {index} />\n\t{/each}\n</art-grid-svlt>\n\n<style>\n\tart-grid-svlt {\n\t\t/* justify-content: space-evenly; */\n\t\tpadding: 1rem;\n\t\t/* justify-content: space-evenly; */\n\t\t/* padding: 1rem; */\n\t\t/* padding: var(--art-grid-gap); */\n\t\t/* border-bottom: 1rem solid transparent; */\n\t\t/* border-bottom: var(--art-grid-gap) solid transparent; */\n\t\toverflow-y: auto;\n\t\toverflow-x: hidden;\n\t\theight: 100%;\n\t\tgrid-area: art-grid-svlt;\n\t\tbackground-color: rgba(0, 0, 0, 0.3);\n\t\tborder-right: 10px transparent solid;\n\t\t/* display: grid;\n\t\tgrid-template-columns: repeat(auto-fit, var(--cover-dimension));\n\t\tgrid-template-rows: repeat(auto-fit, var(--cover-dimension));\n\t\tgap: var(--art-grid-gap); */\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t}\n</style>\n",
    "<img src=\"./img/bg.jpg\" alt=\"\">\n\n<style>\n  img{\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: -1;\n  }\n</style>",
    "<script lang=\"ts\">import { selectedSongs } from '../store/index.store';\nimport { selectedAlbum } from '../store/player.store';\n$: {\n    console.log($selectedSongs);\n    // $selectedSongs\n    // checkSongs()\n}\nlet previousSongList = undefined;\nfunction checkSongs() {\n    if (!($selectedAlbum === null || $selectedAlbum === void 0 ? void 0 : $selectedAlbum.Songs))\n        return;\n    let songs = [];\n    $selectedSongs.forEach((index) => {\n        songs.push($selectedAlbum.Songs[index]);\n    });\n    if (songs.length === 0) {\n        songs = $selectedAlbum.Songs;\n    }\n    if (JSON.stringify(previousSongList) === JSON.stringify(songs)) {\n        return;\n    }\n    else {\n        previousSongList = [...songs];\n    }\n    console.log(songs);\n}\n</script>\n\n<details-svlt />\n\n<style>\n\tdetails-svlt {\n\t\tgrid-area: details-svlt;\n\t\tbackground-color: rgba(0, 0, 0, 0.25);\n\t}\n</style>\n",
    "<script lang=\"ts\">import { getGroupingIPC } from '../service/ipc.service';\nlet selectedGroupBy = localStorage.getItem('GroupBy');\nlet groups = [];\nlet selection;\nlet firstSelectedGroupByAssign = true;\n$: console.log(selection);\n$: {\n    selectedGroupBy;\n    if (firstSelectedGroupByAssign === true) {\n        firstSelectedGroupByAssign = false;\n        // Get Grouping as soon as the variable is set.\n        getGrouping();\n    }\n    else {\n        if (selectedGroupBy !== localStorage.getItem('GroupBy')) {\n            // Get Grouping if grouping is changed.\n            getGrouping();\n            localStorage.setItem('GroupBy', selectedGroupBy);\n            //TODO Save to config file\n        }\n    }\n}\nfunction getGrouping() {\n    getGroupingIPC(selectedGroupBy).then((result) => (groups = result));\n}\nfunction cutText(text) {\n    if (text) {\n        if (text.length > 20) {\n            return text.substr(0, 20) + '...';\n        }\n        else {\n            return text;\n        }\n    }\n    else {\n        return text;\n    }\n}\n</script>\n\n<grouping-svlt>\n\t<select bind:value={selectedGroupBy}>\n\t\t<option value=\"null\" disabled selected>Group by...</option>\n\t\t<option value=\"none\">None</option>\n\t\t<option value=\"Genre\">Genre</option>\n\t\t<option value=\"AlbumArtist\">Album Artist</option>\n\t</select>\n\n\t<grouping>\n\t\t{#each groups as group, index (index)}\n\t\t\t<group>\n\t\t\t\t<input id={group.id} type=\"radio\" value={group.name} bind:group={selection} />\n\t\t\t\t<label for={group.id}>{cutText(group.name)}</label>\n\t\t\t</group>\n\t\t{/each}\n\t</grouping>\n</grouping-svlt>\n\n<style>\n\tgrouping-svlt {\n\t\t--highlight-color: rgba(255, 255, 255, 0.25);\n\t\t/* height: calc(100vh - 64px); */\n\t}\n\n\tselect {\n\t\tpadding: 0.5rem 1rem;\n\t\tfont-size: 1rem;\n\t\tfont-family: inherit;\n\t\tbackground-color: rgba(255, 255, 255, 0.05);\n\t\tcolor: #fff;\n\t\tborder: none;\n\t\toutline: none;\n\t\tcursor: pointer;\n\t}\n\n\tgrouping {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\toverflow-y: auto;\n\t\theight: 100%;\n\t\t/* border-right: 1px rgba(255, 255, 255, 0.75) solid; */\n\t\tpadding: 0 .5rem;\n\t\tfont-size: 0.8rem;\n\t}\n\n\tgrouping group label {\n\t\tborder-radius: 5px;\n\t\tmargin: 0.25rem 0;\n\t\tpadding: 0 0.5rem;\n\t\ttext-align: center;\n\t\tcursor: pointer;\n\t}\n\n\tgrouping group:hover label {\n\t\tbackground-color: var(--highlight-color);\n\t}\n\n\tgrouping group label {\n\t\tuser-select: none;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n\n\tgrouping item label {\n\t\tcursor: pointer;\n\t}\n\n\tgrouping group input[type='radio'] {\n\t\tdisplay: none;\n\t}\n\n\tgrouping group input[type='radio'] + label::before {\n\t\tcontent: '●';\n\t\tfont-size: 1.25rem;\n\t\tmargin-right: 2px;\n\t\topacity: 0;\n\t}\n\tgrouping group input[type='radio']:checked + label {\n\t\tbackground-color: var(--highlight-color);\n\t}\n\n\tgrouping group input[type='radio']:checked + label::before {\n\t\tcontent: '●';\n\t\topacity: 1;\n\t\tmargin-right: 2px;\n\t}\n</style>\n",
    "<navigation-svlt>\n\t<h1>N</h1>\n</navigation-svlt>\n\n<style>\n\tnavigation-svlt {\n    grid-area: navigation-svlt;\n\t\t/* background-color: rgba(255,255,255,.05); */\n\t}\n</style>\n",
    "<script lang=\"ts\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n;\nimport { onMount } from 'svelte';\nimport NextButton from '../components/NextButton.svelte';\nimport PreviousButton from '../components/PreviousButton.svelte';\nimport PlayButton from '../components/PlayButton.svelte';\nimport PlayerProgress from '../components/PlayerProgress.svelte';\nimport PlayerVolumeBar from '../components/PlayerVolumeBar.svelte';\nimport { isDoneDrawing, songList, waveformUrl } from '../store/index.store';\nimport { playbackIndex, isPlaying, playback } from '../store/player.store';\nimport { getWaveformIPCData } from '../service/waveform.service';\nimport { drawWaveform } from '../service/draw.service';\nimport { nextSong } from '../functions/nextSong.fn';\nimport { getWaveformIPC } from '../service/ipc.service';\nimport { escapeString } from '../functions/escapeString.fn';\nlet progress = 0;\nlet currentSong = undefined;\nlet nextSongPreloaded = undefined;\nlet player = undefined;\nlet drawWaveformDebounce = undefined;\nlet playingInterval = undefined;\n$: {\n    $playbackIndex;\n    resetProgress();\n    playSong();\n}\nfunction resetProgress() {\n    let playerForeground = document.querySelector('player-progress progress-foreground');\n    if (playerForeground) {\n        playerForeground.classList.add('not-smooth');\n        document.documentElement.style.setProperty('--song-time', `0%`);\n        setTimeout(() => {\n            playerForeground.classList.remove('not-smooth');\n        }, 1000);\n    }\n}\n$: {\n    let canvasElement = document.querySelector('canvas');\n    if (canvasElement) {\n        canvasElement.style.opacity = $isDoneDrawing === true ? '1' : '0';\n    }\n}\nonMount(() => {\n    player = document.querySelector('audio');\n});\nfunction stopPlayer() {\n    player.removeAttribute('src');\n    player.pause();\n    drawWaveform([0]);\n    document.documentElement.style.setProperty('--song-time', `0%`);\n    $isPlaying = false;\n    return;\n}\nfunction playSong() {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (($playback === null || $playback === void 0 ? void 0 : $playback['SongList']) === undefined) {\n            return;\n        }\n        let songBuffer = undefined;\n        currentSong = $playback['SongList'][$playbackIndex['indexToPlay']];\n        if (currentSong === undefined) {\n            return stopPlayer();\n        }\n        if (currentSong['$loki'] !== (nextSongPreloaded === null || nextSongPreloaded === void 0 ? void 0 : nextSongPreloaded['ID'])) {\n            songBuffer = yield fetchSong(escapeString(currentSong['SourceFile']));\n        }\n        else {\n            songBuffer = nextSongPreloaded['SongBuffer'];\n        }\n        const blob = new Blob([songBuffer]);\n        const url = window.URL.createObjectURL(blob);\n        player.src = url;\n        if ($playbackIndex['playNow'] === false) {\n            player.pause();\n        }\n        else {\n            player.play().catch(() => { });\n        }\n        localStorage.setItem('LastPlayedAlbumID', $playback['AlbumID']);\n        localStorage.setItem('LastPlayedSongID', String(currentSong['ID']));\n        preLoadNextSong();\n    });\n}\nfunction preLoadNextSong() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const nextSong = $playback['SongList'][$playbackIndex['indexToPlay'] + 1];\n        if (nextSong) {\n            let songBuffer = yield fetchSong(escapeString(nextSong['SourceFile']));\n            nextSongPreloaded = {\n                ID: nextSong['$loki'],\n                SongBuffer: songBuffer\n            };\n        }\n    });\n}\nfunction fetchSong(songPath) {\n    return new Promise((resolve, reject) => {\n        fetch(songPath)\n            .then((data) => data.arrayBuffer())\n            .then((arrayBuffer) => {\n            resolve(arrayBuffer);\n        });\n    });\n}\nfunction startInterval() {\n    // console.log('Start')\n    $isPlaying = true;\n    clearInterval(playingInterval);\n    playingInterval = setInterval(() => {\n        progress = (100 / currentSong['Duration']) * player.currentTime;\n        document.documentElement.style.setProperty('--song-time', `${progress}%`);\n    }, 100);\n}\nfunction stopInterval() {\n    // console.log('Stop')\n    $isPlaying = false;\n    clearInterval(playingInterval);\n}\n</script>\n\n<player-svlt>\n\t<audio controls={true} on:play={() => startInterval()} on:pause={() => stopInterval()} on:ended={() => nextSong()}>\n\t\t<track kind=\"captions\" />\n\t</audio>\n\n\t<player-buttons>\n\t\t<PreviousButton {player} />\n\t\t<PlayButton {player} />\n\t\t<NextButton />\n\t</player-buttons>\n\n\t<PlayerVolumeBar {player} />\n\n\t<PlayerProgress {player} song={currentSong} />\n</player-svlt>\n\n<style>\n\tplayer-svlt {\n\t\tgrid-area: player-svlt;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tbackground-color: var(--high-color);\n\n\t\ttransition: background-color 300ms ease-in-out;\n\t}\n\n\taudio {\n\t\tdisplay: none;\n\t\tposition: fixed;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n\n\tplayer-buttons {\n\t\theight: var(--button-size);\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t}\n\n\t:global(player-buttons > *) {\n\t\tcursor: pointer;\n\t\tmargin: 0 0.75rem;\n\t}\n</style>\n",
    "<script lang=\"ts\">import SongListItem from '../components/SongListItem.svelte';\nimport { selectedSongs } from '../store/index.store';\nimport { selectedAlbum } from '../store/player.store';\nlet lastSelectedSong = 0;\nfunction selectSongs(e) {\n    let { ctrlKey, metaKey, shiftKey } = e;\n    e['path'].forEach((element) => {\n        if (element.tagName === 'SONG-LIST-ITEM') {\n            let id = Number(element.getAttribute('id'));\n            let currentSelectedSong = Number(element.getAttribute('index'));\n            if (ctrlKey === false && metaKey === false && shiftKey === false) {\n                $selectedSongs = [id];\n            }\n            if (shiftKey === false && (ctrlKey === true || metaKey === true)) {\n                if (!$selectedSongs.includes(id)) {\n                    $selectedSongs.push(id);\n                }\n                else {\n                    $selectedSongs.splice($selectedSongs.indexOf(id), 1);\n                }\n            }\n            if (shiftKey === true && ctrlKey === false && metaKey === false) {\n                for (let i = currentSelectedSong; i !== lastSelectedSong; currentSelectedSong < lastSelectedSong ? i++ : i--) {\n                    let currentID = $selectedAlbum['Songs'][i]['ID'];\n                    if (!$selectedSongs.find((i) => i === currentID)) {\n                        $selectedSongs.push(currentID);\n                    }\n                }\n            }\n            lastSelectedSong = currentSelectedSong;\n            $selectedSongs = $selectedSongs;\n        }\n    });\n}\n</script>\n\n<song-list-svlt on:click={(e) => selectSongs(e)}>\n\t{#if $selectedAlbum !== undefined}\n\t\t{#if $selectedAlbum['Songs'] !== undefined}\n\t\t\t{#each $selectedAlbum['Songs'] as song, index (index)}\n\t\t\t\t<SongListItem albumID={$selectedAlbum['ID']} {song} {index} />\n\t\t\t{/each}\n\t\t{/if}\n\t{/if}\n</song-list-svlt>\n\n<style>\n\tsong-list-svlt {\n\t\tborder: 10px transparent solid;\n\t\tgrid-area: song-list-svlt;\n\t\toverflow-y: auto;\n\t\theight: 100%;\n\t\tpadding-right: 10px;\n\t\t/* background-color: rgba(255,255,255,.20); */\n\t}\n</style>\n",
    "<script lang=\"ts\">import { getCoverIPC } from '../service/ipc.service';\nimport { selectedAlbum } from '../store/player.store';\nlet coverSrc = undefined;\n$: {\n    // console.log($selectedAlbum)\n    if ($selectedAlbum === null || $selectedAlbum === void 0 ? void 0 : $selectedAlbum['RootDir']) {\n        getCoverIPC($selectedAlbum['RootDir']).then((response) => {\n            if (response['fileType'] === 'image') {\n                // coverSrc = `url(${response['filePath']})`\n                // console.log(coverSrc)\n                // document.documentElement.style.setProperty('--song-list-background-image', coverSrc)\n                let $el = document.querySelector('song-list-background-svlt');\n                if ($el) {\n                    // console.log($el)\n                    // console.log($el.style.backgroundImage)\n                    $el.setAttribute('style', `background-image: url('${response['filePath']}');`);\n                }\n                // $el.backgroundImage = coverSrc\n                // console.log()\n                // console.log($el)\n            }\n        });\n    }\n}\n</script>\n\n<song-list-background-svlt />\n\n<style>\n\tsong-list-background-svlt {\n\t\tgrid-area: song-list-svlt;\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tpointer-events: none;\n\n\t\t/* background-image: url('/Users/fran/Library/Application Support/Jahmin/art/192/dn8dyp.webp'); */\n\t\t/* background-size: cover; */\n\t\tbackground-repeat: no-repeat;\n\t\tbackground-size: 100% 100%;\n\t\tz-index: -1;\n\n\t\ttransition: background-image 300ms;\n\t}\n\n\tsong-list-background-svlt::before {\n\t\tcontent: '';\n\t\tdisplay: block;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tbackground-color: rgba(0, 0, 0, 0.33);\n\t\tbackdrop-filter: blur(100px);\n\t\t/* z-index: 1; */\n\t}\n\n</style>\n"
  ],
  "names": [],
  "mappings": "AA2DC,IAAI,eAAC,CAAC,AACL,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAC1C,kBAAkB,CAAE,GAAG,CAAC,GAAG,CAAC,IAAI,CAChC,mBAAmB,CAClB,0DAA0D;GAC1D,2DAA2D;GAC3D,wDAAwD,AAC1D,CAAC;ACiDD,mCAAK,aAAa,AAAC,CAAC,AAEpB,CAAC,AAED,KAAK,SAAS,8BAAC,CAAC,AACf,UAAU,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AAC/E,CAAC,AAED,KAAK,8BAAC,CAAC,AACN,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,IAAI,CAEb,MAAM,CAAE,IAAI,CAIZ,MAAM,CAAE,OAAO,CACf,MAAM,CAAE,IAAI,iBAAiB,CAAC,CAC9B,KAAK,CAAE,IAAI,iBAAiB,CAAC,CAC7B,SAAS,CAAE,IAAI,iBAAiB,CAAC,CACjC,UAAU,CAAE,IAAI,iBAAiB,CAAC,AACnC,CAAC,AAED,aAAa,8BAAC,CAAC,AACd,OAAO,CAAE,MAAM,CAAC,IAAI,CACpB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,UAAU,CAAE,GAAG,CACf,UAAU,CAAE,MAAM,AACnB,CAAC,AAED,oBAAK,CAAG,eAAE,CAAC,AACV,WAAW,CAAE,CAAC,CACd,QAAQ,CAAE,CAAC,AACZ,CAAC,AAED,YAAY,8BAAC,CAAC,AACb,aAAa,CAAE,QAAQ,CACvB,QAAQ,CAAE,MAAM,CAChB,WAAW,CAAE,MAAM,CACnB,SAAS,CAAE,KAAK,IAAI,iBAAiB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,AACjD,CAAC,AAED,UAAU,8BAAC,CAAC,AACX,uBAAuB,CAAE,MAAM,CAAC,GAAG,CACnC,WAAW,CAAE,MAAM,AACpB,CAAC,AAED,KAAK,8BAAC,CAAC,AACN,MAAM,CAAE,IAAI,iBAAiB,CAAC,CAC9B,KAAK,CAAE,IAAI,iBAAiB,CAAC,AAC9B,CAAC,AAED,GAAG,8BAAC,CAAC,AACJ,MAAM,CAAE,IAAI,iBAAiB,CAAC,CAC9B,KAAK,CAAE,IAAI,iBAAiB,CAAC,AAC9B,CAAC,AAED,GAAG,OAAO,8BAAC,CAAC,AACX,OAAO,CAAE,IAAI,AAGd,CAAC,AAED,GAAG,SAAS,8BAAC,CAAC,AACb,YAAY,CAAE,IAAI,CAClB,YAAY,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CACjC,YAAY,CAAE,KAAK,CACnB,OAAO,CAAE,IAAI,AACd,CAAC;ACtKD,iBAAiB,8BAAC,CAAC,AAClB,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,IAAI,aAAa,CAAC,CAC1B,KAAK,CAAE,IAAI,aAAa,CAAC,CACzB,gBAAgB,CAAE,WAAW,AAC9B,CAAC,AAED,gCAAiB,CAAG,eAAE,CAAC,AACtB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,OAAO,CAAE,KAAK,CACd,gBAAgB,CAAE,IAAI,WAAW,CAAC,CAClC,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,gBAAgB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,aAAa,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,AACpG,CAAC,AAED,iBAAiB,uBAAQ,CAAC,SAAS,eAAC,CAAC,AACpC,SAAS,CAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,AAC7D,CAAC,AAED,iBAAiB,uBAAQ,CAAC,UAAU,eAAC,CAAC,AACrC,SAAS,CAAE,QAAQ,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,AACnE,CAAC,AAED,SAAS,8BAAC,CAAC,AACV,SAAS,CAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,AAClD,CAAC,AAED,UAAU,8BAAC,CAAC,AACX,SAAS,CAAE,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,AACvD,CAAC;AC8BD,eAAe,8BAAC,CAAC,AAChB,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACb,CAAC,AAED,8BAAe,CAAG,eAAE,CAAC,AACpB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,IAAI,AACb,CAAC,AAED,8BAAe,CAAC,mBAAmB,eAAC,CAAC,AACpC,OAAO,CAAE,CAAC,CACV,cAAc,CAAE,UAAU,CAC1B,gBAAgB,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAGpC,SAAS,CAAE,IAAI,WAAW,CAAC,CAC3B,UAAU,CAAE,SAAS,CAAC,KAAK,CAAC,MAAM,AACnC,CAAC,AAED,8BAAe,CAAC,oBAAoB,eAAC,CAAC,AACrC,OAAO,CAAE,CAAC,CACV,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,CAAC,CAEV,UAAU,CAAE,OAAO,CAAC,KAAK,CAAC,MAAM,AACjC,CAAC;ACzDD,UAAU,eAAC,CAAC,AACX,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,IAAI,CAE3B,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CACnB,MAAM,CAAE,IAAI,AACb,CAAC,AAED,KAAK,eAAC,CAAC,AACN,OAAO,CAAE,KAAK,CACd,QAAQ,CAAE,CAAC,CACX,WAAW,CAAE,CAAC,CACd,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,CAAC,CACV,OAAO,CAAE,CAAC,AACX,CAAC,AAED,oBAAK,OAAO,AAAC,CAAC,AACb,MAAM,CAAE,IAAI,AACb,CAAC,AAED,YAAY,eAAC,CAAC,AACb,QAAQ,CAAE,CAAC,CACX,WAAW,CAAE,CAAC,CACd,SAAS,CAAE,WAAW,IAAI,cAAc,CAAC,CAAC,CAC1C,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CAEvB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,gBAAgB,CAAE,IAAI,CACtB,aAAa,CAAE,IAAI,CACnB,cAAc,CAAE,UAAU,CAE1B,UAAU,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CACzC,KAAK,CAAE,OAAO,CAEd,uBAAuB,CAAE,MAAM,CAAC,GAAG,AACpC,CAAC,AAED,UAAU,eAAC,CAAC,AACX,QAAQ,CAAE,CAAC,CACX,WAAW,CAAE,CAAC,CACd,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,gBAAgB,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,YAAY,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,CAAC,CAC1E,aAAa,CAAE,IAAI,CACnB,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AACpG,CAAC;ACrED,cAAc,8BAAC,CAAC,AACf,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,OAAO,CAEf,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAC/D,kBAAkB,CAAE,IAAI,CAExB,MAAM,CAAE,OAAO,CAAC,CAAC,CACjB,OAAO,CAAE,OAAO,CAAC,MAAM,CACvB,WAAW,CAAE,IAAI,CAEjB,aAAa,CAAE,GAAG,CAElB,mBAAmB,CAAE,uBAAuB,CAAC,CAAC,UAAU,CAAC,CAAC,gBAAgB,CAC1E,mBAAmB,CAAE,KAAK,CAC1B,0BAA0B,CAAE,WAAW,AACxC,CAAC,AAED,6BAAc,CAAG,eAAE,CAAC,AACnB,OAAO,CAAE,CAAC,CAAC,MAAM,AAClB,CAAC,AAED,cAAc,QAAQ,8BAAC,CAAC,AACvB,uBAAuB,CAAE,MAAM,CAAC,GAAG,CACnC,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACtD,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AAC3C,CAAC,AACD,cAAc,SAAS,8BAAC,CAAC,AACxB,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,AAC5C,CAAC;ACTD,aAAa,aAAC,CAAC,AAEd,OAAO,CAAE,IAAI,CAMb,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,IAAI,CACZ,SAAS,CAAE,aAAa,CACxB,gBAAgB,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CACpC,YAAY,CAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAKpC,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,IAAI,AAChB,CAAC;AC7EA,iBAAG,CAAC,AACF,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,EAAE,AACb,CAAC;ACqBF,YAAY,cAAC,CAAC,AACb,SAAS,CAAE,YAAY,CACvB,gBAAgB,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,AACtC,CAAC;ACyBD,aAAa,6CAAC,CAAC,AACd,iBAAiB,CAAE,yBAAyB,AAE7C,CAAC,AAED,MAAM,6CAAC,CAAC,AACP,OAAO,CAAE,MAAM,CAAC,IAAI,CACpB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,OAAO,CACpB,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAC3C,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,OAAO,AAChB,CAAC,AAED,QAAQ,6CAAC,CAAC,AACT,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,UAAU,CAAE,IAAI,CAChB,MAAM,CAAE,IAAI,CAEZ,OAAO,CAAE,CAAC,CAAC,KAAK,CAChB,SAAS,CAAE,MAAM,AAClB,CAAC,AAED,uBAAQ,CAAC,KAAK,CAAC,KAAK,8BAAC,CAAC,AACrB,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,OAAO,CAAC,CAAC,CACjB,OAAO,CAAE,CAAC,CAAC,MAAM,CACjB,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,OAAO,AAChB,CAAC,AAED,uBAAQ,CAAC,KAAK,MAAM,CAAC,KAAK,8BAAC,CAAC,AAC3B,gBAAgB,CAAE,IAAI,iBAAiB,CAAC,AACzC,CAAC,AAED,uBAAQ,CAAC,KAAK,CAAC,KAAK,8BAAC,CAAC,AACrB,WAAW,CAAE,IAAI,CACjB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,AACpB,CAAC,AAED,uBAAQ,CAAC,IAAI,CAAC,KAAK,8BAAC,CAAC,AACpB,MAAM,CAAE,OAAO,AAChB,CAAC,AAED,uBAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,8BAAC,CAAC,AACnC,OAAO,CAAE,IAAI,AACd,CAAC,AAED,uBAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,gBAAC,CAAG,oBAAK,QAAQ,AAAC,CAAC,AACnD,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,OAAO,CAClB,YAAY,CAAE,GAAG,CACjB,OAAO,CAAE,CAAC,AACX,CAAC,AACD,uBAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,gBAAC,QAAQ,CAAG,KAAK,eAAC,CAAC,AACnD,gBAAgB,CAAE,IAAI,iBAAiB,CAAC,AACzC,CAAC,AAED,uBAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,gBAAC,QAAQ,CAAG,oBAAK,QAAQ,AAAC,CAAC,AAC3D,OAAO,CAAE,GAAG,CACZ,OAAO,CAAE,CAAC,CACV,YAAY,CAAE,GAAG,AAClB,CAAC;ACxHD,eAAe,eAAC,CAAC,AACd,SAAS,CAAE,eAAe,AAE7B,CAAC;ACyID,WAAW,cAAC,CAAC,AACZ,SAAS,CAAE,WAAW,CACtB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,gBAAgB,CAAE,IAAI,YAAY,CAAC,CAEnC,UAAU,CAAE,gBAAgB,CAAC,KAAK,CAAC,WAAW,AAC/C,CAAC,AAED,KAAK,cAAC,CAAC,AACN,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,KAAK,CACf,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,AACR,CAAC,AAED,cAAc,cAAC,CAAC,AACf,MAAM,CAAE,IAAI,aAAa,CAAC,CAC1B,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,AACpB,CAAC,AAEO,kBAAkB,AAAE,CAAC,AAC5B,MAAM,CAAE,OAAO,CACf,MAAM,CAAE,CAAC,CAAC,OAAO,AAClB,CAAC;AC3HD,cAAc,eAAC,CAAC,AACf,MAAM,CAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAC9B,SAAS,CAAE,cAAc,CACzB,UAAU,CAAE,IAAI,CAChB,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,IAAI,AAEpB,CAAC;ACzBD,yBAAyB,cAAC,CAAC,AAC1B,SAAS,CAAE,cAAc,CACzB,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,cAAc,CAAE,IAAI,CAIpB,iBAAiB,CAAE,SAAS,CAC5B,eAAe,CAAE,IAAI,CAAC,IAAI,CAC1B,OAAO,CAAE,EAAE,CAEX,UAAU,CAAE,gBAAgB,CAAC,KAAK,AACnC,CAAC,AAED,uCAAyB,QAAQ,AAAC,CAAC,AAClC,OAAO,CAAE,EAAE,CACX,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CACrC,eAAe,CAAE,KAAK,KAAK,CAAC,AAE7B,CAAC"
}